priority -50

###########################################################################
#			                 Global functions 				              #
###########################################################################

###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet cfile "C implementation file template" b
/**
 *  \file   `!p snip.rv = snip.fn`
 *  \brief	${1:Brief}
 */

/* -------------------------- Development history -------------------------- */
/* -------------------------------- Authors -------------------------------- */
/*
 *  ${2:NameAcron}  ${3:Name}  ${4:email}
 */

/* --------------------------------- Notes --------------------------------- */
/* ----------------------------- Include files ----------------------------- */
#include "`!p snip.rv = snip.basename`.h"

/* ----------------------------- Local macros ------------------------------ */
/* ------------------------------- Constants ------------------------------- */
/* ---------------------------- Local data types --------------------------- */
/* ---------------------------- Global variables --------------------------- */
/* ---------------------------- Local variables ---------------------------- */
/* ----------------------- Local function prototypes ----------------------- */
/* ---------------------------- Local functions ---------------------------- */
/* ---------------------------- Global functions --------------------------- */
endsnippet

snippet hfile "C specification file template" b
/**
 *  \file   `!p snip.rv = snip.fn`
 *  \brief	${1:Brief}
 */

/* -------------------------- Development history -------------------------- */
/* -------------------------------- Authors -------------------------------- */
/*
 *  ${2:NameAcron}  ${3:Name}  ${4:email}
 */

/* --------------------------------- Notes --------------------------------- */
/* --------------------------------- Module -------------------------------- */
#ifndef `!p snip.rv = '__%s_H__' % (snip.basename).upper()`
#define `!p snip.rv = '__%s_H__' % (snip.basename).upper()`

/* ---------------------- External C language linkage ---------------------- */
#ifdef __cplusplus
extern "C" {
#endif

/* --------------------------------- Macros -------------------------------- */
/* -------------------------------- Constants ------------------------------ */
/* ------------------------------- Data types ------------------------------ */
/* -------------------------- External variables --------------------------- */
/* -------------------------- Function prototypes -------------------------- */
/* -------------------- External C language linkage end -------------------- */
#ifdef __cplusplus
}
#endif

/* ------------------------------ Module end ------------------------------- */
#endif
endsnippet
